// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb_mail.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PbMail {

  /// <summary>Holder for reflection information generated from pb_mail.proto</summary>
  public static partial class PbMailReflection {

    #region Descriptor
    /// <summary>File descriptor for pb_mail.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PbMailReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1wYl9tYWlsLnByb3RvEgdwYl9tYWlsIvkBCgRNYWlsEgsKA3VpZBgBIAEo",
            "CRIOCgZzdGF0dXMYAiABKAUSDgoGc2VuZGVyGAMgASgJEhAKCHNlbmRlcklk",
            "GAQgASgFEg8KB3N1YmplY3QYBSABKAkSDAoEYm9keRgGIAEoCRIRCgljYW5E",
            "ZWxldGUYByABKAgSEwoLY3JlYXRlZFRpbWUYCCABKAMSEwoLZXhwaXJlZFRp",
            "bWUYCSABKAMSFgoOc3ViamVjdF9wYXJhbXMYCiADKAkSEwoLYm9keV9wYXJh",
            "bXMYCyADKAkSEgoKdGVtcGxhdGVJRBgMIAEoBRIVCg1oYXNBdHRhY2htZW50",
            "GA8gASgIIi4KDkMyU19RdWVyeU1haWxzEg0KBWJlZ2luGAEgASgFEg0KBWNv",
            "dW50GAIgASgFIj0KDlMyQ19RdWVyeU1haWxzEg0KBXRvdGFsGAEgASgFEhwK",
            "BW1haWxzGAIgAygLMg0ucGJfbWFpbC5NYWlsIiIKE0MyU19RdWVyeU1haWxE",
            "ZXRhaWwSCwoDdWlkGAEgASgJIjIKE1MyQ19RdWVyeU1haWxEZXRhaWwSGwoE",
            "bWFpbBgBIAEoCzINLnBiX21haWwuTWFpbCIeCg5DMlNfRGVsZXRlTWFpbBIM",
            "CgR1aWRzGAEgAygJIhwKDlMyQ19EZWxldGVNYWlsEgoKAm9rGAEgASgIIiEK",
            "EUMyU19UYWtlTWFpbEl0ZW1zEgwKBHVpZHMYASADKAkiOgoRUzJDX1Rha2VN",
            "YWlsSXRlbXMSCgoCb2sYASABKAgSDAoEdWlkcxgCIAMoCRILCgNlcnIYAyAB",
            "KAkiIAoOUzJDX01haWxOb3RpY2USDgoGbmV3TnVtGAEgASgFQgxaCnBiL3Bi",
            "X21haWxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.Mail), global::PbMail.Mail.Parser, new[]{ "Uid", "Status", "Sender", "SenderId", "Subject", "Body", "CanDelete", "CreatedTime", "ExpiredTime", "SubjectParams", "BodyParams", "TemplateID", "HasAttachment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.C2S_QueryMails), global::PbMail.C2S_QueryMails.Parser, new[]{ "Begin", "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.S2C_QueryMails), global::PbMail.S2C_QueryMails.Parser, new[]{ "Total", "Mails" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.C2S_QueryMailDetail), global::PbMail.C2S_QueryMailDetail.Parser, new[]{ "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.S2C_QueryMailDetail), global::PbMail.S2C_QueryMailDetail.Parser, new[]{ "Mail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.C2S_DeleteMail), global::PbMail.C2S_DeleteMail.Parser, new[]{ "Uids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.S2C_DeleteMail), global::PbMail.S2C_DeleteMail.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.C2S_TakeMailItems), global::PbMail.C2S_TakeMailItems.Parser, new[]{ "Uids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.S2C_TakeMailItems), global::PbMail.S2C_TakeMailItems.Parser, new[]{ "Ok", "Uids", "Err" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMail.S2C_MailNotice), global::PbMail.S2C_MailNotice.Parser, new[]{ "NewNum" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Mail : pb::IMessage<Mail> {
    private static readonly pb::MessageParser<Mail> _parser = new pb::MessageParser<Mail>(() => new Mail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Mail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail(Mail other) : this() {
      uid_ = other.uid_;
      status_ = other.status_;
      sender_ = other.sender_;
      senderId_ = other.senderId_;
      subject_ = other.subject_;
      body_ = other.body_;
      canDelete_ = other.canDelete_;
      createdTime_ = other.createdTime_;
      expiredTime_ = other.expiredTime_;
      subjectParams_ = other.subjectParams_.Clone();
      bodyParams_ = other.bodyParams_.Clone();
      templateID_ = other.templateID_;
      hasAttachment_ = other.hasAttachment_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail Clone() {
      return new Mail(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    /// <summary>
    ///邮件唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private int status_;
    /// <summary>
    ///邮件状态(0-新邮件 1-已读 2-附件已领取)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 3;
    private string sender_ = "";
    /// <summary>
    ///发送者ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "senderId" field.</summary>
    public const int SenderIdFieldNumber = 4;
    private int senderId_;
    /// <summary>
    ///发送者名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 5;
    private string subject_ = "";
    /// <summary>
    ///邮件标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 6;
    private string body_ = "";
    /// <summary>
    ///邮件内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "canDelete" field.</summary>
    public const int CanDeleteFieldNumber = 7;
    private bool canDelete_;
    /// <summary>
    ///邮件能否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanDelete {
      get { return canDelete_; }
      set {
        canDelete_ = value;
      }
    }

    /// <summary>Field number for the "createdTime" field.</summary>
    public const int CreatedTimeFieldNumber = 8;
    private long createdTime_;
    /// <summary>
    ///邮件创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedTime {
      get { return createdTime_; }
      set {
        createdTime_ = value;
      }
    }

    /// <summary>Field number for the "expiredTime" field.</summary>
    public const int ExpiredTimeFieldNumber = 9;
    private long expiredTime_;
    /// <summary>
    ///邮件过期时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpiredTime {
      get { return expiredTime_; }
      set {
        expiredTime_ = value;
      }
    }

    /// <summary>Field number for the "subject_params" field.</summary>
    public const int SubjectParamsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_subjectParams_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> subjectParams_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///邮件标题参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SubjectParams {
      get { return subjectParams_; }
    }

    /// <summary>Field number for the "body_params" field.</summary>
    public const int BodyParamsFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_bodyParams_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> bodyParams_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///邮件内容参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BodyParams {
      get { return bodyParams_; }
    }

    /// <summary>Field number for the "templateID" field.</summary>
    public const int TemplateIDFieldNumber = 12;
    private int templateID_;
    /// <summary>
    ///邮件模板ID(mail表的ID)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TemplateID {
      get { return templateID_; }
      set {
        templateID_ = value;
      }
    }

    /// <summary>Field number for the "hasAttachment" field.</summary>
    public const int HasAttachmentFieldNumber = 15;
    private bool hasAttachment_;
    /// <summary>
    ///是否有附件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAttachment {
      get { return hasAttachment_; }
      set {
        hasAttachment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Mail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Mail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Status != other.Status) return false;
      if (Sender != other.Sender) return false;
      if (SenderId != other.SenderId) return false;
      if (Subject != other.Subject) return false;
      if (Body != other.Body) return false;
      if (CanDelete != other.CanDelete) return false;
      if (CreatedTime != other.CreatedTime) return false;
      if (ExpiredTime != other.ExpiredTime) return false;
      if(!subjectParams_.Equals(other.subjectParams_)) return false;
      if(!bodyParams_.Equals(other.bodyParams_)) return false;
      if (TemplateID != other.TemplateID) return false;
      if (HasAttachment != other.HasAttachment) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (SenderId != 0) hash ^= SenderId.GetHashCode();
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (CanDelete != false) hash ^= CanDelete.GetHashCode();
      if (CreatedTime != 0L) hash ^= CreatedTime.GetHashCode();
      if (ExpiredTime != 0L) hash ^= ExpiredTime.GetHashCode();
      hash ^= subjectParams_.GetHashCode();
      hash ^= bodyParams_.GetHashCode();
      if (TemplateID != 0) hash ^= TemplateID.GetHashCode();
      if (HasAttachment != false) hash ^= HasAttachment.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sender);
      }
      if (SenderId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SenderId);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Subject);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Body);
      }
      if (CanDelete != false) {
        output.WriteRawTag(56);
        output.WriteBool(CanDelete);
      }
      if (CreatedTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CreatedTime);
      }
      if (ExpiredTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ExpiredTime);
      }
      subjectParams_.WriteTo(output, _repeated_subjectParams_codec);
      bodyParams_.WriteTo(output, _repeated_bodyParams_codec);
      if (TemplateID != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(TemplateID);
      }
      if (HasAttachment != false) {
        output.WriteRawTag(120);
        output.WriteBool(HasAttachment);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (SenderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SenderId);
      }
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (CanDelete != false) {
        size += 1 + 1;
      }
      if (CreatedTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedTime);
      }
      if (ExpiredTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpiredTime);
      }
      size += subjectParams_.CalculateSize(_repeated_subjectParams_codec);
      size += bodyParams_.CalculateSize(_repeated_bodyParams_codec);
      if (TemplateID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TemplateID);
      }
      if (HasAttachment != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Mail other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.SenderId != 0) {
        SenderId = other.SenderId;
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.CanDelete != false) {
        CanDelete = other.CanDelete;
      }
      if (other.CreatedTime != 0L) {
        CreatedTime = other.CreatedTime;
      }
      if (other.ExpiredTime != 0L) {
        ExpiredTime = other.ExpiredTime;
      }
      subjectParams_.Add(other.subjectParams_);
      bodyParams_.Add(other.bodyParams_);
      if (other.TemplateID != 0) {
        TemplateID = other.TemplateID;
      }
      if (other.HasAttachment != false) {
        HasAttachment = other.HasAttachment;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
          case 26: {
            Sender = input.ReadString();
            break;
          }
          case 32: {
            SenderId = input.ReadInt32();
            break;
          }
          case 42: {
            Subject = input.ReadString();
            break;
          }
          case 50: {
            Body = input.ReadString();
            break;
          }
          case 56: {
            CanDelete = input.ReadBool();
            break;
          }
          case 64: {
            CreatedTime = input.ReadInt64();
            break;
          }
          case 72: {
            ExpiredTime = input.ReadInt64();
            break;
          }
          case 82: {
            subjectParams_.AddEntriesFrom(input, _repeated_subjectParams_codec);
            break;
          }
          case 90: {
            bodyParams_.AddEntriesFrom(input, _repeated_bodyParams_codec);
            break;
          }
          case 96: {
            TemplateID = input.ReadInt32();
            break;
          }
          case 120: {
            HasAttachment = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查询邮件列表
  /// </summary>
  public sealed partial class C2S_QueryMails : pb::IMessage<C2S_QueryMails> {
    private static readonly pb::MessageParser<C2S_QueryMails> _parser = new pb::MessageParser<C2S_QueryMails>(() => new C2S_QueryMails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_QueryMails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_QueryMails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_QueryMails(C2S_QueryMails other) : this() {
      begin_ = other.begin_;
      count_ = other.count_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_QueryMails Clone() {
      return new C2S_QueryMails(this);
    }

    /// <summary>Field number for the "begin" field.</summary>
    public const int BeginFieldNumber = 1;
    private int begin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Begin {
      get { return begin_; }
      set {
        begin_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_QueryMails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_QueryMails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Begin != other.Begin) return false;
      if (Count != other.Count) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Begin != 0) hash ^= Begin.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Begin != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Begin);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Begin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Begin);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_QueryMails other) {
      if (other == null) {
        return;
      }
      if (other.Begin != 0) {
        Begin = other.Begin;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Begin = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C_QueryMails : pb::IMessage<S2C_QueryMails> {
    private static readonly pb::MessageParser<S2C_QueryMails> _parser = new pb::MessageParser<S2C_QueryMails>(() => new S2C_QueryMails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_QueryMails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_QueryMails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_QueryMails(S2C_QueryMails other) : this() {
      total_ = other.total_;
      mails_ = other.mails_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_QueryMails Clone() {
      return new S2C_QueryMails(this);
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 1;
    private int total_;
    /// <summary>
    /// 总的邮件数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "mails" field.</summary>
    public const int MailsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PbMail.Mail> _repeated_mails_codec
        = pb::FieldCodec.ForMessage(18, global::PbMail.Mail.Parser);
    private readonly pbc::RepeatedField<global::PbMail.Mail> mails_ = new pbc::RepeatedField<global::PbMail.Mail>();
    /// <summary>
    /// 返回指定范围的邮件列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbMail.Mail> Mails {
      get { return mails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_QueryMails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_QueryMails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Total != other.Total) return false;
      if(!mails_.Equals(other.mails_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= mails_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Total != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Total);
      }
      mails_.WriteTo(output, _repeated_mails_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += mails_.CalculateSize(_repeated_mails_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_QueryMails other) {
      if (other == null) {
        return;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      mails_.Add(other.mails_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Total = input.ReadInt32();
            break;
          }
          case 18: {
            mails_.AddEntriesFrom(input, _repeated_mails_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查询指定邮件详细
  /// </summary>
  public sealed partial class C2S_QueryMailDetail : pb::IMessage<C2S_QueryMailDetail> {
    private static readonly pb::MessageParser<C2S_QueryMailDetail> _parser = new pb::MessageParser<C2S_QueryMailDetail>(() => new C2S_QueryMailDetail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_QueryMailDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_QueryMailDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_QueryMailDetail(C2S_QueryMailDetail other) : this() {
      uid_ = other.uid_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_QueryMailDetail Clone() {
      return new C2S_QueryMailDetail(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    /// <summary>
    /// 邮件的唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_QueryMailDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_QueryMailDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_QueryMailDetail other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C_QueryMailDetail : pb::IMessage<S2C_QueryMailDetail> {
    private static readonly pb::MessageParser<S2C_QueryMailDetail> _parser = new pb::MessageParser<S2C_QueryMailDetail>(() => new S2C_QueryMailDetail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_QueryMailDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_QueryMailDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_QueryMailDetail(S2C_QueryMailDetail other) : this() {
      Mail = other.mail_ != null ? other.Mail.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_QueryMailDetail Clone() {
      return new S2C_QueryMailDetail(this);
    }

    /// <summary>Field number for the "mail" field.</summary>
    public const int MailFieldNumber = 1;
    private global::PbMail.Mail mail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PbMail.Mail Mail {
      get { return mail_; }
      set {
        mail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_QueryMailDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_QueryMailDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Mail, other.Mail)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mail_ != null) hash ^= Mail.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (mail_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Mail);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mail);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_QueryMailDetail other) {
      if (other == null) {
        return;
      }
      if (other.mail_ != null) {
        if (mail_ == null) {
          mail_ = new global::PbMail.Mail();
        }
        Mail.MergeFrom(other.Mail);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (mail_ == null) {
              mail_ = new global::PbMail.Mail();
            }
            input.ReadMessage(mail_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 删除邮件
  /// </summary>
  public sealed partial class C2S_DeleteMail : pb::IMessage<C2S_DeleteMail> {
    private static readonly pb::MessageParser<C2S_DeleteMail> _parser = new pb::MessageParser<C2S_DeleteMail>(() => new C2S_DeleteMail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_DeleteMail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_DeleteMail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_DeleteMail(C2S_DeleteMail other) : this() {
      uids_ = other.uids_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_DeleteMail Clone() {
      return new C2S_DeleteMail(this);
    }

    /// <summary>Field number for the "uids" field.</summary>
    public const int UidsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_uids_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> uids_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 邮件UID数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Uids {
      get { return uids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_DeleteMail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_DeleteMail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!uids_.Equals(other.uids_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= uids_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      uids_.WriteTo(output, _repeated_uids_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += uids_.CalculateSize(_repeated_uids_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_DeleteMail other) {
      if (other == null) {
        return;
      }
      uids_.Add(other.uids_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            uids_.AddEntriesFrom(input, _repeated_uids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C_DeleteMail : pb::IMessage<S2C_DeleteMail> {
    private static readonly pb::MessageParser<S2C_DeleteMail> _parser = new pb::MessageParser<S2C_DeleteMail>(() => new S2C_DeleteMail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_DeleteMail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_DeleteMail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_DeleteMail(S2C_DeleteMail other) : this() {
      ok_ = other.ok_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_DeleteMail Clone() {
      return new S2C_DeleteMail(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private bool ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_DeleteMail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_DeleteMail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != false) hash ^= Ok.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ok);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_DeleteMail other) {
      if (other == null) {
        return;
      }
      if (other.Ok != false) {
        Ok = other.Ok;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ok = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 领取附件
  /// </summary>
  public sealed partial class C2S_TakeMailItems : pb::IMessage<C2S_TakeMailItems> {
    private static readonly pb::MessageParser<C2S_TakeMailItems> _parser = new pb::MessageParser<C2S_TakeMailItems>(() => new C2S_TakeMailItems());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_TakeMailItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_TakeMailItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_TakeMailItems(C2S_TakeMailItems other) : this() {
      uids_ = other.uids_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_TakeMailItems Clone() {
      return new C2S_TakeMailItems(this);
    }

    /// <summary>Field number for the "uids" field.</summary>
    public const int UidsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_uids_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> uids_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 邮件UID数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Uids {
      get { return uids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_TakeMailItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_TakeMailItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!uids_.Equals(other.uids_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= uids_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      uids_.WriteTo(output, _repeated_uids_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += uids_.CalculateSize(_repeated_uids_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_TakeMailItems other) {
      if (other == null) {
        return;
      }
      uids_.Add(other.uids_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            uids_.AddEntriesFrom(input, _repeated_uids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C_TakeMailItems : pb::IMessage<S2C_TakeMailItems> {
    private static readonly pb::MessageParser<S2C_TakeMailItems> _parser = new pb::MessageParser<S2C_TakeMailItems>(() => new S2C_TakeMailItems());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_TakeMailItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_TakeMailItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_TakeMailItems(S2C_TakeMailItems other) : this() {
      ok_ = other.ok_;
      uids_ = other.uids_.Clone();
      err_ = other.err_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_TakeMailItems Clone() {
      return new S2C_TakeMailItems(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private bool ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    /// <summary>Field number for the "uids" field.</summary>
    public const int UidsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_uids_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> uids_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 领取成功的邮件UID数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Uids {
      get { return uids_; }
    }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 3;
    private string err_ = "";
    /// <summary>
    /// 错误字符
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Err {
      get { return err_; }
      set {
        err_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_TakeMailItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_TakeMailItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      if(!uids_.Equals(other.uids_)) return false;
      if (Err != other.Err) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != false) hash ^= Ok.GetHashCode();
      hash ^= uids_.GetHashCode();
      if (Err.Length != 0) hash ^= Err.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ok);
      }
      uids_.WriteTo(output, _repeated_uids_codec);
      if (Err.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Err);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != false) {
        size += 1 + 1;
      }
      size += uids_.CalculateSize(_repeated_uids_codec);
      if (Err.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Err);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_TakeMailItems other) {
      if (other == null) {
        return;
      }
      if (other.Ok != false) {
        Ok = other.Ok;
      }
      uids_.Add(other.uids_);
      if (other.Err.Length != 0) {
        Err = other.Err;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ok = input.ReadBool();
            break;
          }
          case 18: {
            uids_.AddEntriesFrom(input, _repeated_uids_codec);
            break;
          }
          case 26: {
            Err = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 邮件通知
  /// </summary>
  public sealed partial class S2C_MailNotice : pb::IMessage<S2C_MailNotice> {
    private static readonly pb::MessageParser<S2C_MailNotice> _parser = new pb::MessageParser<S2C_MailNotice>(() => new S2C_MailNotice());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_MailNotice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMail.PbMailReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_MailNotice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_MailNotice(S2C_MailNotice other) : this() {
      newNum_ = other.newNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_MailNotice Clone() {
      return new S2C_MailNotice(this);
    }

    /// <summary>Field number for the "newNum" field.</summary>
    public const int NewNumFieldNumber = 1;
    private int newNum_;
    /// <summary>
    /// 未读邮件数量(新邮件)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewNum {
      get { return newNum_; }
      set {
        newNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_MailNotice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_MailNotice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewNum != other.NewNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewNum != 0) hash ^= NewNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NewNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_MailNotice other) {
      if (other == null) {
        return;
      }
      if (other.NewNum != 0) {
        NewNum = other.NewNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            NewNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
