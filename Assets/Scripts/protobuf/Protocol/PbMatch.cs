// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb_match.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PbMatch {

  /// <summary>Holder for reflection information generated from pb_match.proto</summary>
  public static partial class PbMatchReflection {

    #region Descriptor
    /// <summary>File descriptor for pb_match.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PbMatchReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5wYl9tYXRjaC5wcm90bxIIcGJfbWF0Y2gaD3BiX2JhdHRsZS5wcm90byI8",
            "Cg9DMlNfQmF0dGxlTWF0Y2gSKQoKYmF0dGxlVHlwZRgCIAEoDjIVLnBiX2Jh",
            "dHRsZS5CYXR0bGVUeXBlIh0KD1MyQ19CYXR0bGVNYXRjaBIKCgJPSxgBIAEo",
            "CCIXChVDMlNfQmF0dGxlQ2FuY2VsTWF0Y2giFwoVUzJDX0JhdHRsZUNhbmNl",
            "bE1hdGNoIhgKFlMyQ19CYXR0bGVNYXRjaFRpbWVvdXRCDVoLcGIvcGJfbWF0",
            "Y2hiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PbBattle.PbBattleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMatch.C2S_BattleMatch), global::PbMatch.C2S_BattleMatch.Parser, new[]{ "BattleType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMatch.S2C_BattleMatch), global::PbMatch.S2C_BattleMatch.Parser, new[]{ "OK" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMatch.C2S_BattleCancelMatch), global::PbMatch.C2S_BattleCancelMatch.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMatch.S2C_BattleCancelMatch), global::PbMatch.S2C_BattleCancelMatch.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbMatch.S2C_BattleMatchTimeout), global::PbMatch.S2C_BattleMatchTimeout.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class C2S_BattleMatch : pb::IMessage<C2S_BattleMatch> {
    private static readonly pb::MessageParser<C2S_BattleMatch> _parser = new pb::MessageParser<C2S_BattleMatch>(() => new C2S_BattleMatch());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_BattleMatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMatch.PbMatchReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BattleMatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BattleMatch(C2S_BattleMatch other) : this() {
      battleType_ = other.battleType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BattleMatch Clone() {
      return new C2S_BattleMatch(this);
    }

    /// <summary>Field number for the "battleType" field.</summary>
    public const int BattleTypeFieldNumber = 2;
    private global::PbBattle.BattleType battleType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PbBattle.BattleType BattleType {
      get { return battleType_; }
      set {
        battleType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_BattleMatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_BattleMatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BattleType != other.BattleType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BattleType != 0) hash ^= BattleType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BattleType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BattleType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BattleType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BattleType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_BattleMatch other) {
      if (other == null) {
        return;
      }
      if (other.BattleType != 0) {
        BattleType = other.BattleType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 16: {
            battleType_ = (global::PbBattle.BattleType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C_BattleMatch : pb::IMessage<S2C_BattleMatch> {
    private static readonly pb::MessageParser<S2C_BattleMatch> _parser = new pb::MessageParser<S2C_BattleMatch>(() => new S2C_BattleMatch());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BattleMatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMatch.PbMatchReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleMatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleMatch(S2C_BattleMatch other) : this() {
      oK_ = other.oK_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleMatch Clone() {
      return new S2C_BattleMatch(this);
    }

    /// <summary>Field number for the "OK" field.</summary>
    public const int OKFieldNumber = 1;
    private bool oK_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OK {
      get { return oK_; }
      set {
        oK_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BattleMatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BattleMatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OK != other.OK) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OK != false) hash ^= OK.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OK != false) {
        output.WriteRawTag(8);
        output.WriteBool(OK);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OK != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BattleMatch other) {
      if (other == null) {
        return;
      }
      if (other.OK != false) {
        OK = other.OK;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OK = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2S_BattleCancelMatch : pb::IMessage<C2S_BattleCancelMatch> {
    private static readonly pb::MessageParser<C2S_BattleCancelMatch> _parser = new pb::MessageParser<C2S_BattleCancelMatch>(() => new C2S_BattleCancelMatch());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S_BattleCancelMatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMatch.PbMatchReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BattleCancelMatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BattleCancelMatch(C2S_BattleCancelMatch other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S_BattleCancelMatch Clone() {
      return new C2S_BattleCancelMatch(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S_BattleCancelMatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S_BattleCancelMatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S_BattleCancelMatch other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class S2C_BattleCancelMatch : pb::IMessage<S2C_BattleCancelMatch> {
    private static readonly pb::MessageParser<S2C_BattleCancelMatch> _parser = new pb::MessageParser<S2C_BattleCancelMatch>(() => new S2C_BattleCancelMatch());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BattleCancelMatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMatch.PbMatchReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleCancelMatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleCancelMatch(S2C_BattleCancelMatch other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleCancelMatch Clone() {
      return new S2C_BattleCancelMatch(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BattleCancelMatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BattleCancelMatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BattleCancelMatch other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class S2C_BattleMatchTimeout : pb::IMessage<S2C_BattleMatchTimeout> {
    private static readonly pb::MessageParser<S2C_BattleMatchTimeout> _parser = new pb::MessageParser<S2C_BattleMatchTimeout>(() => new S2C_BattleMatchTimeout());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C_BattleMatchTimeout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbMatch.PbMatchReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleMatchTimeout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleMatchTimeout(S2C_BattleMatchTimeout other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C_BattleMatchTimeout Clone() {
      return new S2C_BattleMatchTimeout(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C_BattleMatchTimeout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C_BattleMatchTimeout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C_BattleMatchTimeout other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
